# Condition to detect VIM or SSH running in a pane
if_vim_or_ssh="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?(g?(view|n?vim?x?)(diff)?|ssh)$'"

# Condition to detect SSH running in a pane
if_ssh="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?ssh$'"

# Use ZSH as shell
set-option -g default-shell /bin/zsh

# Enable mouse control
set-option -g mouse on

# Wait for output
set-option -g monitor-activity on

# Extend scrollback buffer size
set-option -g history-limit 5000

# Integrate with system clipboard
set -g set-clipboard on

# 256 color support
set -g default-terminal "tmux-256color"

# enable terminal compability
set-option -ga terminal-overrides ",tmux-256color:Tc"

# Remap tmux key to M-a
unbind C-b
set-option -g prefix M-a
bind-key M-a send-prefix

# Destroy session when no clients are attached, but only when we aren't SSHing into a machine
if -b '[[ -z $SSH_CONNECTION ]]' 'set-option -g destroy-unattached on' 'set-option -g destroy-unattached off'

# Start counting at 1
set -g base-index 1
setw -g pane-base-index 1

# Use VI keys in copy mode
set-window-option -g mode-keys vi

# Coply clipboard to X clipboard on X11
if-shell -b 'echo $XDG_SESSION_TYPE | grep -q x11' "bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

# Window switching
bind 'M-t' 'new-window'
bind 'M-[' 'previous-window'
bind 'M-]' 'next-window'
bind -n 'M-t' if "$if_ssh" 'send-keys M-t' 'new-window'
bind -n 'M-[' if "$if_ssh" 'send-keys M-[' 'previous-window'
bind -n 'M-]' if "$if_ssh" 'send-keys M-]' 'next-window'

bind 'M-1' 'select-window -t 1'
bind 'M-2' 'select-window -t 2'
bind 'M-3' 'select-window -t 3'
bind 'M-4' 'select-window -t 4'
bind 'M-5' 'select-window -t 5'
bind 'M-6' 'select-window -t 6'
bind 'M-7' 'select-window -t 7'
bind 'M-8' 'select-window -t 8'
bind 'M-9' 'select-window -t 9'

bind -n 'M-1' if "$if_ssh" 'send-keys M-1' 'select-window -t 1'
bind -n 'M-2' if "$if_ssh" 'send-keys M-2' 'select-window -t 2'
bind -n 'M-3' if "$if_ssh" 'send-keys M-3' 'select-window -t 3'
bind -n 'M-4' if "$if_ssh" 'send-keys M-4' 'select-window -t 4'
bind -n 'M-5' if "$if_ssh" 'send-keys M-5' 'select-window -t 5'
bind -n 'M-6' if "$if_ssh" 'send-keys M-6' 'select-window -t 6'
bind -n 'M-7' if "$if_ssh" 'send-keys M-7' 'select-window -t 7'
bind -n 'M-8' if "$if_ssh" 'send-keys M-8' 'select-window -t 8'
bind -n 'M-9' if "$if_ssh" 'send-keys M-9' 'select-window -t 9'

# Ctrl + home row -> home/end/pgup/pgdown
bind -n 'C-h' send-keys home
bind -n 'C-j' send-keys pagedown
bind -n 'C-k' send-keys pageup
bind -n 'C-l' send-keys end

bind -n 'M-K' copy-mode -u
bind -T copy-mode-vi "M-K" send-keys -X halfpage-up
bind -T copy-mode-vi "M-J" send-keys -X halfpage-down

# Alt + home row -> pane / VIM split navigation
# Based on https://github.com/christoomey/vim-tmux-navigator
bind 'M-h' 'select-pane -L'
bind 'M-j' 'select-pane -D'
bind 'M-k' 'select-pane -U'
bind 'M-l' 'select-pane -R'
bind 'M-f' 'resize-pane -Z'
bind 'M-.' 'split-window -h -c "#{pane_current_path}"'
bind 'M-,' 'split-window -v -c "#{pane_current_path}"'

bind -n 'M-h' if "$if_vim_or_ssh" 'send-keys M-h' 'select-pane -L'
bind -n 'M-j' if "$if_vim_or_ssh" 'send-keys M-j' 'select-pane -D'
bind -n 'M-k' if "$if_vim_or_ssh" 'send-keys M-k' 'select-pane -U'
bind -n 'M-l' if "$if_vim_or_ssh" 'send-keys M-l' 'select-pane -R'
bind -n 'M-f' if "$if_vim_or_ssh" 'send-keys M-f' 'resize-pane -Z'
bind -n 'M-.' if "$if_vim_or_ssh" 'send-keys M-.' 'split-window -h -c "#{pane_current_path}"'
bind -n 'M-,' if "$if_vim_or_ssh" 'send-keys M-,' 'split-window -v -c "#{pane_current_path}"'

# Pane navigation
bind -n 'M-q' if "$if_vim_or_ssh" 'send-keys M-q' 'kill-pane'
bind 'M-q' 'kill-pane'

bind -T copy-mode-vi 'M-h' select-pane -L
bind -T copy-mode-vi 'M-j' select-pane -D
bind -T copy-mode-vi 'M-k' select-pane -U
bind -T copy-mode-vi 'M-l' select-pane -R

# Vi copy mode
set-window-option -g mode-keys vi

# shortcut to reload the configuration file
bind r source-file ~/.tmux.conf

# Don't delay the escape key
set -s escape-time 0

# Status bar
setw -g status-style bg=default
set -g status-position top
set -g status-right-length 100
setw -g status-right ''
setw -g status-left ''

# Make background window look like white tab
set-window-option -g window-status-style bg=default
set-window-option -g window-status-style fg=white
set-window-option -g window-status-style none
set-window-option -g window-status-format '#[fg=#6699cc,bg=colour235] #I #[fg=#999999,bg=#2d2d2d] #W #[default]'

# Make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-style none
set-window-option -g window-status-current-format '#[fg=#f99157,bg=#2d2d2d] #I #[fg=#cccccc,bg=#393939] #W #[default]'

## pane border and colors
set -g pane-active-border-style bg=default
set -g pane-active-border-style fg="#373b41"
set -g pane-border-style bg=default
set -g pane-border-style fg="#373b41"

# Only show status bar if there is at least 1 tab
set-hook -g window-linked "if -F '#{!=:#{session_windows},1}' 'set status on'"
set-hook -g window-unlinked "if -F '#{==:#{session_windows},1}' 'set status off'"
set-hook -g after-new-session "set status off"
